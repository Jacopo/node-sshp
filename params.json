{"name":"sshp","tagline":"simple, intuitive, no bullshit approach to parallel ssh","body":"Installation\r\n------------\r\n\r\n    npm install -g sshp\r\n\r\nWhy?\r\n---\r\n\r\nthere are thousands of programs that do this, but none of them do it well. I\r\nwanted something *simple*, *clear*, *non-assumptive*, and *cross-platform compatible*.\r\n\r\n`sshp` takes a command to run (pass directly to `ssh`), and\r\na list of hosts with `-f file` or passed in over stdin.  For every line of\r\noutput from the remote hosts, the hostname will be prepended and printed out to\r\nthe user.  All stderr appears red and is written to stderr on the local\r\nmachine, and stdout green to stdout.  The exit code will be printed as soon as\r\nit is avaliable if `-e` is supplied, green for 0, red for != 0, as well as the ms\r\ndeltas for all operations so you know how long things took.\r\n\r\nMost importantly, you can specify the maximum number of concurrent `ssh`\r\nconnections to use with `-m` or `--max-jobs`.\r\n\r\nSend a `SIGUSR1` to the process to get the current progress (like dd(1))\r\n\r\nExamples\r\n--------\r\n\r\nParallel ssh into hosts supplied by a file, running `uname -v`\r\n\r\n![sshp1](http://daveeddy.com/static/media/github/sshp/sshp-1.png)\r\n\r\nsee how *simple* it is?  you can get fancy and check the exit codes\r\nof the commands run remotely.\r\n\r\n![sshp2](http://daveeddy.com/static/media/github/sshp/sshp-2.png)\r\n\r\nYou can see the exit status of every command run remotely.\r\n\r\nI'm also illustrating the point that `sshp` takes the input file\r\nover stdin, I'm not trying to win a [uuoc](http://partmaps.org/era/unix/award.html)\r\naward.\r\n\r\nRun with `-d` to get full debug information, making it *clear* what\r\n`sshp` will do.\r\n\r\n![sshp3](http://daveeddy.com/static/media/github/sshp/sshp-3.png)\r\n\r\nJust like `ssh`, `sshp` takes arguments like `-l user`, `-p port` and\r\n`-q`. If these arguments are not present, it will be as if you ran `ssh`\r\nwithout those arguments.  This means `ssh` will run using your .ssh config\r\nif it is present, and not *assume* you ssh out on port 22, or as your username\r\nfor instance.\r\n\r\nJoin hosts together by unique output to clearly identify differences or discrepancies\r\nin the output generated by each host.\r\n\r\n![sshp4](http://daveeddy.com/static/media/github/sshp/sshp-4.png)\r\n\r\nUsage\r\n-----\r\n\r\n    Usage: sshp [-m maxjobs] [-f file] command ...\r\n\r\n    parallel ssh with streaming output\r\n\r\n    examples\r\n      ssh into a list of hosts passed via stdin and get the output of `uname -v`\r\n\r\n        sshp uname -v < hosts\r\n\r\n      ssh into a list of hosts passed on the command line, limit max parallel\r\n      connections to 3, and grab the output of ps piped to grep on the remote end\r\n\r\n        sshp -m 3 -f my_hosts.txt \"ps -ef | grep process\"\r\n\r\n    options\r\n      -d, --debug       turn on debugging information, defaults to false\r\n      -e, --exit-codes  print the exit code of the remote processes, defaults to false\r\n      -f, --file        a file of hosts separated by newlines, defaults to stdin\r\n      -g, --group       group the output together as it comes in by hostname, not line-by-line\r\n      -h, --help        print this message and exit\r\n      -j, --join        join hosts together by unique output\r\n      -m, --max-jobs    the maximum number of jobs to run concurrently, defaults to 30\r\n      -n, --dry-run     print debug information without actually running any commands\r\n      -N, --no-strict   disable strict host key checking for ssh, defaults to false\r\n      -s, --silent      silence all stdout and stderr from remote hosts, defaults to false\r\n      -u, --updates     check for available updates\r\n      -v, --version     print the version number and exit\r\n\r\n    ssh options (options passed directly to ssh)\r\n      -i, --identity    ssh identity file to use\r\n      -l, --login       the username to login as\r\n      -q, --quiet       run ssh in quiet mode\r\n      -p, --port        the ssh port\r\n\r\nLicense\r\n-------\r\n\r\nMIT License\r\n\r\nExtra\r\n-----\r\n\r\nIf you're looking for *cross-platform compatible* see `Installation` above ;)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}